<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Cf-Binary_search With Monotonicity</title>
      <link href="/2022/09/17/cf-binary-search/"/>
      <url>/2022/09/17/cf-binary-search/</url>
      
        <content type="html"><![CDATA[<h2 id="二分相关算法学习">二分相关算法学习</h2><h3 id="c.-binary-string"><a href="https://codeforces.ml/contest/1680/problem/C">C. Binary String</a></h3><ol type="1"><li>边界看情况 开大开小或正好(out of boundary)</li><li>prefix 和 suffix 数组含义和操作(不能转换)</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> bs </tag>
            
            <tag> mono </tag>
            
            <tag> two_index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cf-Dp</title>
      <link href="/2022/09/15/test/"/>
      <url>/2022/09/15/test/</url>
      
        <content type="html"><![CDATA[<h2 id="dp学习">dp学习</h2><h3 id="a1.-burenka-and-traditions-easy-version"><a href="https://codeforces.com/problemset/problem/1718/A1">A1. Burenka and Traditions (easy version)</a></h3><ol type="1"><li>维护多个操作信息， 单纯的贪心只能维护一组信息(<strong><em>如何想到dp</em></strong>)</li><li>dp[i][j]代表前i-1个数字处理为0，且最后一个数字为j的<strong>最少</strong>方案数<br />&gt; dp一定要可以求出答案，在过程处理中记得考虑保留答案信息</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次训练赛 4h</title>
      <link href="/2022/09/03/pratise/"/>
      <url>/2022/09/03/pratise/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="/download/practice.pdf">题目</a> 1. 开题慢，卡壳，没有快速定位能做的题 2. 没有规定卡结束时间，最后冲刺决策没有训练 3. 分散的太开了，开题多没写出来 4. 分工不太熟悉</p></blockquote><h2 id="补题">补题</h2><h3 id="d.-fill-the-bag">D. Fill The Bag</h3><blockquote><p><a href="https://codeforces.com/contest/1303/problem/D">链接</a> 读题，保证<span class="math inline">\(a[i]=2^i\)</span>,即a[i]代表一位二进制位 想到用二进制拆分解题</p></blockquote><p>坑点 1. 借位的代码实现， 被借位要减1 2. qpow (base,idx) 提供的参数反了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt;PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> io ios::sync_with_stdio(false),cin.tie(0)</span></span><br><span class="line"><span class="type">const</span> ll INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> ll N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll n,m,k,T;</span><br><span class="line">ll f[N];</span><br><span class="line">ll cnt[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll base,ll x)</span></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x)&#123;</span><br><span class="line">        <span class="keyword">if</span> (x&amp;<span class="number">1</span>) res*=base;</span><br><span class="line">        base*=base;</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">debug</span><span class="params">(vector&lt;ll&gt;ans)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)&#123;</span><br><span class="line">        cout &lt;&lt; i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll nums = <span class="number">0</span>;</span><br><span class="line">    vector&lt;ll&gt;ans;</span><br><span class="line">    ll tmp = m;</span><br><span class="line">    <span class="keyword">while</span> (tmp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp&amp;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> ans.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">        tmp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// cout &lt;&lt;&quot;tmp &quot;&lt;&lt;tmp&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout &lt;&lt;&quot;--&quot;&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// debug(ans);</span></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!ans[i])&#123;</span><br><span class="line">            cnt[i+<span class="number">1</span>]+=cnt[i]/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt[i])&#123;</span><br><span class="line">            cnt[i]--;</span><br><span class="line">            cnt[i+<span class="number">1</span>]+=cnt[i]/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ll k = i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (!cnt[k])&#123;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt[k]-=<span class="number">1</span>;</span><br><span class="line">            nums+=(k-i);</span><br><span class="line">            cnt[i+<span class="number">1</span>]+=<span class="built_in">qpow</span>(<span class="number">2</span>,(k-i<span class="number">-1</span>))<span class="number">-1</span>;</span><br><span class="line">            <span class="comment">// cout &lt;&lt; cnt[3]&lt;&lt;&quot;---&quot;&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span> <span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll idx = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x)&#123;</span><br><span class="line">        idx+=<span class="number">1</span>;</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt[idx]++;</span><br><span class="line">    <span class="comment">// return idx</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        cin &gt;&gt; m&gt;&gt;n;</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span> (cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            cin &gt;&gt; f[i];</span><br><span class="line">            sum += f[i];</span><br><span class="line">            <span class="built_in">add</span>(f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum&lt;m)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">calc</span>()&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;output.txt&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    io;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Os-Util-Xargs</title>
      <link href="/2022/07/24/os-util-xargs/"/>
      <url>/2022/07/24/os-util-xargs/</url>
      
        <content type="html"><![CDATA[<h2 id="关于xargs实现的一些问题">关于xargs实现的一些问题</h2><blockquote><p><a href="https://pdos.csail.mit.edu/6.828/2021/labs/util.html">MIT 6.S081: Operating System Engineering</a></p></blockquote><h3 id="背景知识">背景知识</h3><ol type="1"><li><a href="https://zhuanlan.zhihu.com/p/337386886">linux下命令行参数和标准输入</a></li><li>c指针和数组区别 &gt; 数组用于存放数据，指针用于指向数据</li><li>string.h中字符串函数使用</li></ol><h3 id="结论">结论</h3><ol type="1"><li>个人开发少用指针，几乎不会用到二级指针，即 char**</li><li>char* args[]理解为指针的数组，自己存储了一份指针的内存，而char**只是指向指针。 &gt; 本质是内存分配的问题，是否分配内存</li></ol><h3 id="解题思路">解题思路</h3><ol type="1"><li>读取命令和命令行参数</li><li>用read()一个一个字节从标准输入读入，以read()==-1结束 &gt; 用 ./grade 输出调试</li></ol><h3 id="code">code:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/param.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">debug</span><span class="params">(<span class="type">char</span> *buf[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;debug-mode arg: %s\n&quot;</span>, buf[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> buf[MAXARG][<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> *m[MAXARG];</span><br><span class="line">    <span class="type">char</span> *command = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; argc; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(buf[i - <span class="number">2</span>], argv[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> idx = argc - <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> opt = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">read</span>(<span class="number">0</span>, &amp;opt, <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// printf(&quot;*%c&quot;, opt);</span></span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="string">&#x27; &#x27;</span> || opt == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                buf[idx++][s] = <span class="number">0</span>;</span><br><span class="line">                s = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            buf[idx][s++] = opt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fork() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; idx; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            m[i + <span class="number">1</span>] = buf[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m[<span class="number">0</span>] = command;</span><br><span class="line">        m[idx + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">exec</span>(command, m);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">wait</span>((<span class="type">int</span> *)<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux os </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test_blog</title>
      <link href="/2022/07/21/test-blog/"/>
      <url>/2022/07/21/test-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="hello-world">Hello world</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello_world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="test-image">test image</h2><figure><img src="try.jpg" alt="" /><figcaption>sad</figcaption></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
