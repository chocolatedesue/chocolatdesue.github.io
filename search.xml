<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Cf-Binary_search With Monotonicity</title>
    <url>/2022/09/17/cf-binary-search/</url>
    <content><![CDATA[<h2 id="二分相关算法学习">二分相关算法学习</h2>
<h3 id="c.-binary-string"><a href="https://codeforces.ml/contest/1680/problem/C">C. Binary String</a></h3>
<ol type="1">
<li>边界看情况 开大开小或正好(out of boundary)</li>
<li>prefix 和 suffix 数组含义和操作(不能转换)</li>
<li>初始值的讨论？ 不能无脑INF</li>
</ol>
<details>
<p><summary><strong>code1_binary_search</strong></summary></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt;PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> io ios::sync_with_stdio(false),cin.tie(0)</span></span><br><span class="line"><span class="type">const</span> ll INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"> </span><br><span class="line">ll n,m,k,T;</span><br><span class="line">string s;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">// void debug()&#123;</span></span><br><span class="line"><span class="comment">//     for (ll i = )</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(ll u,<span class="type">const</span> vector&lt;ll&gt;&amp;pre,<span class="type">const</span> vector&lt;ll&gt;&amp;suf,<span class="type">const</span> ll&amp; zeros)</span></span>&#123;</span><br><span class="line">    ll rm0 = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// const ll cnt1 = pre.size();</span></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>;i&lt;=u;++i)&#123;</span><br><span class="line">        rm0 = <span class="built_in">max</span> (rm0,pre[i]+suf[u-i]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    ll remain0 = zeros-rm0;</span><br><span class="line">    <span class="comment">// ll remain0 = pre[cnt1-1]-rm0;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; remain0&lt;&lt;&quot;---&quot;&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> remain0&lt;=u;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="comment">// s=&quot; &quot;+s;</span></span><br><span class="line">    <span class="type">const</span> ll len = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="comment">// vector&lt;ll&gt;pre(len+1),post(len+1);</span></span><br><span class="line">    ll zeros = <span class="built_in">count</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>(),<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    ll ones = <span class="built_in">count</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>(),<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    vector&lt;ll&gt;pre,suf;</span><br><span class="line">    <span class="comment">// ll cnt1 = 0,cnt0=0;</span></span><br><span class="line">    ll cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>;i&lt;len;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> pre.<span class="built_in">push_back</span>(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    pre.<span class="built_in">push_back</span>(cnt);</span><br><span class="line"> </span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = len<span class="number">-1</span>;~i;--i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i]==<span class="string">&#x27;0&#x27;</span>) cnt++;</span><br><span class="line">        <span class="keyword">else</span> suf.<span class="built_in">push_back</span>(cnt);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    suf.<span class="built_in">push_back</span>(cnt);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    ll l = <span class="number">0</span>, r=ones,mid;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">        mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// cout &lt;&lt; l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;&quot; &quot;&lt;&lt;mid&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid,pre,suf,zeros))&#123;</span><br><span class="line">            <span class="comment">// l = mid;</span></span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> l = mid+<span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l&lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;output.txt&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    io;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
<details>
<p><summary><strong>code2_two_point</strong></summary> <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt;PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> io ios::sync_with_stdio(false),cin.tie(0)</span></span><br><span class="line"><span class="type">const</span> ll INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">ll n,m,k,T;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> pre[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    s = <span class="string">&quot; &quot;</span>+s;</span><br><span class="line">    <span class="type">const</span> ll len = s.<span class="built_in">size</span>();</span><br><span class="line">    ll l = <span class="number">0</span>, r=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// ll ans = 1ll&lt;&lt;60;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=len;++i)&#123;</span><br><span class="line">        pre[i] = pre[i<span class="number">-1</span>] +( s[i]==<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用合适的初值 避免讨论复杂的初始情况(移除所有的数)</span></span><br><span class="line">    ll ans = pre[len];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (r&lt;=len &amp;&amp; l&lt;=r) &#123;</span><br><span class="line">      </span><br><span class="line">        ll remain0 = r-l+<span class="number">1</span>-(pre[r]-pre[l<span class="number">-1</span>]);</span><br><span class="line">        ll extract1 = pre[l<span class="number">-1</span>] + pre[len]-pre[r];</span><br><span class="line">        <span class="comment">// cout &lt;&lt; l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt; &quot; &quot;&lt;&lt;remain0&lt;&lt;&quot; &quot;&lt;&lt;extract1&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span> (remain0&lt;=extract1)&#123;</span><br><span class="line">            ans = <span class="built_in">min</span> (ans,extract1);</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ans = <span class="built_in">min</span> (ans,remain0);</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if (ans==0)break;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;output.txt&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    io;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</details>
<!-- <details> -->
]]></content>
      <tags>
        <tag>algorithm</tag>
        <tag>bs</tag>
        <tag>mono</tag>
        <tag>two_point</tag>
      </tags>
  </entry>
  <entry>
    <title>Cf-Dp</title>
    <url>/2022/09/15/cf-dp/</url>
    <content><![CDATA[<h2 id="dp学习">dp学习</h2>
<h3 id="a1.-burenka-and-traditions-easy-version"><a href="https://codeforces.com/problemset/problem/1718/A1">A1. Burenka and Traditions (easy version)</a></h3>
<blockquote>
<p>对边界信息敏感 快速贪心 1. 维护多个操作信息， 单纯的贪心只能维护一组信息(<strong><em>如何想到dp</em></strong>) 2. dp[i][j]代表前i-1个数字处理为0，且最后一个数字为j的<strong>最少</strong>方案数<br />
dp一定要可以求出答案，在过程处理中记得考虑保留答案信息</p>
</blockquote>
<details>
<p><summary><strong>code</strong></summary></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> io ios::sync_with_stdio(false),cin.tie(0)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n,m,k,T;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> dp[N][<span class="number">8193</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;++i) cin &gt;&gt; a[i];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="comment">// for (int i = 0;i&lt;8192;++i)[</span></span><br><span class="line">    <span class="comment">//     dp[1][i]=1;</span></span><br><span class="line">    <span class="comment">// ]</span></span><br><span class="line">    <span class="comment">// dp[1][a[1]]=0;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">8192</span>;++j)&#123;</span><br><span class="line">            dp[i][j] = dp[i<span class="number">-1</span>][<span class="number">0</span>] + (j!=a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">8192</span>;++j)&#123;</span><br><span class="line">            dp[i][j^a[i]] = <span class="built_in">min</span> (dp[i<span class="number">-1</span>][j]+<span class="number">1</span>,dp[i][j^a[i]]);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; dp[n][<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;output.txt&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    io;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <tags>
        <tag>algorithm</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>Os-Util-Xargs</title>
    <url>/2022/07/24/os-util-xargs/</url>
    <content><![CDATA[<h2 id="关于xargs实现的一些问题">关于xargs实现的一些问题</h2>
<blockquote>
<p><a href="https://pdos.csail.mit.edu/6.828/2021/labs/util.html">MIT 6.S081: Operating System Engineering</a></p>
</blockquote>
<h3 id="背景知识">背景知识</h3>
<ol type="1">
<li><a href="https://zhuanlan.zhihu.com/p/337386886">linux下命令行参数和标准输入</a></li>
<li>c指针和数组区别 &gt; 数组用于存放数据，指针用于指向数据</li>
<li>string.h中字符串函数使用</li>
</ol>
<h3 id="结论">结论</h3>
<ol type="1">
<li>个人开发少用指针，几乎不会用到二级指针，即 char**</li>
<li>char* args[]理解为指针的数组，自己存储了一份指针的内存，而char**只是指向指针。 &gt; 本质是内存分配的问题，是否分配内存</li>
</ol>
<h3 id="解题思路">解题思路</h3>
<ol type="1">
<li>读取命令和命令行参数</li>
<li>用read()一个一个字节从标准输入读入，以read()==-1结束 &gt; 用 ./grade 输出调试</li>
</ol>
<details>
<p><summary><strong>code</strong></summary></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/param.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">debug</span><span class="params">(<span class="type">char</span> *buf[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;debug-mode arg: %s\n&quot;</span>, buf[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> buf[MAXARG][<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> *m[MAXARG];</span><br><span class="line">    <span class="type">char</span> *command = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; argc; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(buf[i - <span class="number">2</span>], argv[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> idx = argc - <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> opt = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">read</span>(<span class="number">0</span>, &amp;opt, <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// printf(&quot;*%c&quot;, opt);</span></span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="string">&#x27; &#x27;</span> || opt == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                buf[idx++][s] = <span class="number">0</span>;</span><br><span class="line">                s = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            buf[idx][s++] = opt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fork() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; idx; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            m[i + <span class="number">1</span>] = buf[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m[<span class="number">0</span>] = command;</span><br><span class="line">        m[idx + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">exec</span>(command, m);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">wait</span>((<span class="type">int</span> *)<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <tags>
        <tag>linux os</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次训练赛 4h</title>
    <url>/2022/09/03/pratise/</url>
    <content><![CDATA[<blockquote>
<p><a href="/download/practice.pdf">题目</a> 1. 开题慢，卡壳，没有快速定位能做的题 2. 没有规定卡结束时间，最后冲刺决策没有训练 3. 分散的太开了，开题多没写出来 4. 分工不太熟悉</p>
</blockquote>
<h2 id="补题">补题</h2>
<h3 id="d.-fill-the-bag">D. Fill The Bag</h3>
<blockquote>
<p><a href="https://codeforces.com/contest/1303/problem/D">链接</a> 读题，保证<span class="math inline">\(a[i]=2^i\)</span>,即a[i]代表一位二进制位 想到用二进制拆分解题</p>
</blockquote>
<p>坑点 1. 借位的代码实现， 被借位要减1 2. qpow (base,idx) 提供的参数反了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt;PII;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> io ios::sync_with_stdio(false),cin.tie(0)</span></span><br><span class="line"><span class="type">const</span> ll INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">const</span> ll N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">ll n,m,k,T;</span><br><span class="line">ll f[N];</span><br><span class="line">ll cnt[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll base,ll x)</span></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x)&#123;</span><br><span class="line">        <span class="keyword">if</span> (x&amp;<span class="number">1</span>) res*=base;</span><br><span class="line">        base*=base;</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">debug</span><span class="params">(vector&lt;ll&gt;ans)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)&#123;</span><br><span class="line">        cout &lt;&lt; i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll nums = <span class="number">0</span>;</span><br><span class="line">    vector&lt;ll&gt;ans;</span><br><span class="line">    ll tmp = m;</span><br><span class="line">    <span class="keyword">while</span> (tmp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp&amp;<span class="number">1</span>) ans.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> ans.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">        tmp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// cout &lt;&lt;&quot;tmp &quot;&lt;&lt;tmp&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// cout &lt;&lt;&quot;--&quot;&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">// debug(ans);</span></span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!ans[i])&#123;</span><br><span class="line">            cnt[i+<span class="number">1</span>]+=cnt[i]/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt[i])&#123;</span><br><span class="line">            cnt[i]--;</span><br><span class="line">            cnt[i+<span class="number">1</span>]+=cnt[i]/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ll k = i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (!cnt[k])&#123;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt[k]-=<span class="number">1</span>;</span><br><span class="line">            nums+=(k-i);</span><br><span class="line">            cnt[i+<span class="number">1</span>]+=<span class="built_in">qpow</span>(<span class="number">2</span>,(k-i<span class="number">-1</span>))<span class="number">-1</span>;</span><br><span class="line">            <span class="comment">// cout &lt;&lt; cnt[3]&lt;&lt;&quot;---&quot;&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span> <span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll idx = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x)&#123;</span><br><span class="line">        idx+=<span class="number">1</span>;</span><br><span class="line">        x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt[idx]++;</span><br><span class="line">    <span class="comment">// return idx</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        cin &gt;&gt; m&gt;&gt;n;</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span> (cnt,<span class="number">0</span>,<span class="keyword">sizeof</span> cnt);</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            cin &gt;&gt; f[i];</span><br><span class="line">            sum += f[i];</span><br><span class="line">            <span class="built_in">add</span>(f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum&lt;m)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">calc</span>()&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;output.txt&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    io;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Test_blog</title>
    <url>/2022/07/21/test-blog/</url>
    <content><![CDATA[<h2 id="hello-world">Hello world</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello_world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="test-image">test image</h2>
<figure>
<img src="try.jpg" alt="" /><figcaption>sad</figcaption>
</figure>
]]></content>
  </entry>
</search>
