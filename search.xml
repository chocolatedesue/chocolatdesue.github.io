<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Os-Util-Xargs</title>
    <url>/2022/07/24/os-util-xargs/</url>
    <content><![CDATA[<h2 id="关于xargs实现的一些问题"><a href="#关于xargs实现的一些问题" class="headerlink" title="关于xargs实现的一些问题"></a>关于xargs实现的一些问题</h2><blockquote>
<p><a href="https://pdos.csail.mit.edu/6.828/2021/labs/util.html">MIT 6.S081: Operating System Engineering</a></p>
</blockquote>
<h3 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h3><ol>
<li><a href="https://zhuanlan.zhihu.com/p/337386886">linux下命令行参数和标准输入</a></li>
<li>c指针和数组区别<blockquote>
<p>数组用于存放数据，指针用于指向数据</p>
</blockquote>
</li>
<li>string.h中字符串函数使用</li>
</ol>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><ol>
<li>个人开发少用指针，几乎不会用到二级指针，即 char**</li>
<li>char* args[]理解为指针的数组，自己存储了一份指针的内存，而char**只是指向指针。 <blockquote>
<p>本质是内存分配的问题，是否分配内存</p>
</blockquote>
</li>
</ol>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><ol>
<li>读取命令和命令行参数</li>
<li>用read()一个一个字节从标准输入读入，以read()&#x3D;&#x3D;-1结束<blockquote>
<p>用 .&#x2F;grade 输出调试</p>
</blockquote>
</li>
</ol>
<h3 id="code"><a href="#code" class="headerlink" title="code:"></a>code:</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/param.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">debug</span><span class="params">(<span class="type">char</span> *buf[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;debug-mode arg: %s\n&quot;</span>, buf[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> buf[MAXARG][<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> *m[MAXARG];</span><br><span class="line">    <span class="type">char</span> *command = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; argc; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(buf[i - <span class="number">2</span>], argv[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> idx = argc - <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> opt = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">read</span>(<span class="number">0</span>, &amp;opt, <span class="number">1</span>) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// printf(&quot;*%c&quot;, opt);</span></span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="string">&#x27; &#x27;</span> || opt == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                buf[idx++][s] = <span class="number">0</span>;</span><br><span class="line">                s = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            buf[idx][s++] = opt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fork() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; idx; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            m[i + <span class="number">1</span>] = buf[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m[<span class="number">0</span>] = command;</span><br><span class="line">        m[idx + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">exec</span>(command, m);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">wait</span>((<span class="type">int</span> *)<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux os</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次训练赛 4h</title>
    <url>/2022/09/03/pratise/</url>
    <content><![CDATA[<blockquote>
<p><a href="/download/practice.pdf">题目</a></p>
</blockquote>
<ol>
<li>开题慢，卡壳，没有快速定位能做的题</li>
<li>没有规定卡结束时间，最后冲刺决策没有训练</li>
<li>分散的太开了，开题多没写出来</li>
<li>分工不太熟悉</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Test_blog</title>
    <url>/2022/07/21/test-blog/</url>
    <content><![CDATA[<h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;hello_world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="test-image"><a href="#test-image" class="headerlink" title="test image"></a>test image</h2><p><img src="/2022/07/21/test-blog/try.jpg" alt="sad"></p>
]]></content>
  </entry>
</search>
